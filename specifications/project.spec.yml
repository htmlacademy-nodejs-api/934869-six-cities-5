openapi: 3.0.0
info:
  title: API сервер для проекта SIX-SITIES 
  description: |-
    * Список ресурсов и маршрутов сервера «six-sities».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: "1.0.0"
tags:
  - name: offers
    description: Действия с предложениями
  - name: comments
    description: Действия с комментариями
  - name: users
    description: Действия с пользователем

paths: 

  /offers:
    post:
      tags:
        - offers
      parameters:
      - name: userToken
        in: header
        required: true
        description: Токен
        schema:
          type: string 

      summary: Создание предложения
      description: Создает новое предложение

      requestBody:
        description: Информация для создания нового предложения

        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fullOffer'
        required: true

      responses:
        "201": 
          description: Предложение добавлено. Объект предложения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fullOffer'

        "401":
          description: пользователь не авторизован

        "400":
          description: Данные не прошли валидацию

    get:
      tags:
        - offers
      summary: Получение всех предложений
      description: Получает список всех имеющихся предложений с опредленными полями

      responses:
          "200": 
            description: Получение массива объектов предложений (не более 60 штук).
              Данные отсортированы по дате публикации (по убыванию)
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/previewOffer'

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получение предложения
      description: Получает детальную информацию по предложению

      responses:
        "200": 
          description: Получение объекта предложения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fullOffer'

        "404":
          description: Предложение не найдено, либо неверный Id

    patch:
      tags:
        - offers
      parameters:
        - name: token
          in: header
          required: true
          description: Токен
          schema:
            type: string

      summary: Редактирование предложения
      description: Вносит изменени в предложение на основе его id

      requestBody:
        description: Информация для обновления предложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/fullOffer'
        required: true

      responses:
        "200":
          description: Предложение успешно обновлено. Возвращает обновленное предложение
          content:
            application/json:
              schema:
                type: object

                properties:
                  schema:
                    $ref: '#/components/schemas/fullOffer'

        "400":
          description: Данные не прошли валидацию

        "401":
          description: Пользователь не авторизован

        "404":
          description: Предложение не найдено, либо неверный Id

        "403":
          description: Пользователь не является автором объявления

    delete:
      tags:
        - offers
      summary: Удаление предложения
      description: Удаляет предложение по его id

      responses:
        "200":
          description: Предложение успешно удалено
        
        "401":
          description: Пользователь не авторизован

        "403":
          description: Пользователь не является автором объявления

        "404":
          description: Предложение не найдено, либо неверный Id

  /offers/premium:
    get:
      tags:
        - offers
      parameters:
      - name: city
        in: header
        required: true
        description: Город
        schema:
          type: string 

      summary: Получение премиальных предложений в городе
      description: Получает список всех премиальных предложений в определенном городе (не более 3).
        Сортировка по дате публикации

      responses:
        "200":
          description: Получит массив премиальных предложений города (не более 3)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/previewOffer'
        
        "404": 
          description: Предложений по указанному городу не найдено, либо название города указано неверно
  
  /offers/favourites:
    post:
        tags:
          - offers
        parameters:
        - name: userId
          in: header
          required: true
          description: ID пользователя
          schema:
            type: string

        - name: token
          in: header
          required: true
          description: Токен
          schema:
            type: string

        summary: Добавление предложения в избранное
        description: Добавит предложение в избранные для авторизированного пользователя

        requestBody:
          description: Информация для создания нового пользователя
          content:
            application/json:
              schema:
                properties:
                  offerId:
                    type: string
                    example: 652466b0b9e6a61f32d0967e

          required: true

        responses:
          "200":
            description: Добавит предложение в избранные предложения пользователя

          "403":
            description: Пользователь не авторизован

          "404":
            description: Предложение не найдено, либо неверный Id пользователя

    get:
        tags:
          - offers
        parameters:
          - name: userId
            in: header
            required: true
            description: ID пользователя
            schema:
              type: string
          - name: token
            in: header
            required: true
            description: Токен
            schema:
              type: string
        summary: Получение избранных предложений
        description: Получает все избранные предложения авторизованного пользователя

        responses:
          "200":
            description: Получит массив избранных предложений пользователя

            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/previewOffer'

          "404":
            description: Предложение не найдено, либо неверный Id пользователя

  /comments:
    get:
      tags:
        - comments
      parameters:
        - name: offerId
          in: header
          required: true
          description: Токен
          schema:
            type: string

      summary: Получение комментариев
      description: Получает список все комментарии по определенному предложению

      responses:
        "200": 
          description: Получение списка кооментариев (50 и меньше последних комментариев).
            Комментарии отсортированы по дате публикации (по убыванию)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/comment'
        
        "404":
          description: Предложение не найдено, либо неверный Id
    
    post:
      tags:
        - comments
      parameters:
        - name: token
          in: header
          required: true
          description: Токен
          schema:
            type: string

      summary: Добавление комментария
      description: Добавляет новый комментарий к предложению

      requestBody:
        description: Информация для создания нового комментария
        content:
          application/json:
            schema:
              type: object

              properties:
                text: 
                  type: string
                  example: Текст комментария

                rating:
                  type: number
                  example: 1

                offerId:
                  type: string
                  example: 652466b0b9e6a61f32d0967e

                authorId:
                  type: string
                  example: 6524578b3e67fd0291b6996f
        required: true

      responses:
        "201": 
          description: Получение созданного комментария
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'

        "400":
          description: Данные не прошли валидацию

        "401":
          description: пользователь не авторизован

  /users:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя

      requestBody:
        description: Информация для создания нового пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true

      responses:
        "200":
          description: Пользователь зарегистрирован. Объект пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "403":
          description: Пользователь с таким email уже существует

  /users/favourites: 
    delete:
      tags:
        - users
      parameters:
        - name: offerId
          in: header
          required: true
          description: Токен
          schema:
            type: string
        
        - name: token
          in: header
          required: true
          description: Токен
          schema:
            type: string

      summary: Удаление предложения из избранного
      description: Удаляет предложение по его id из избранных предложений авторизованного пользователя

      responses:
        "201":
          description: Предложение успешно удалено из избранного
        
        "401":
          description: пользователь не авторизован

        "404":
          description: Предложение не найдено, либо неверный Id

  /users/login:
    post:
      tags:
        - users
      summary: Аутентификации и авторизации пользователя
      description: Авторизирует пользователя на основе логина и пароля

      requestBody:
        description: Информация для создания нового пользователя
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: test@mail.ru

                password:
                  type: string
                  example: 123456
        required: true

      responses:
        "200": 
          description: Токен пользователя
          content:
            application/json:
              schema:
                type: object

                properties:
                  token:
                    type: string
                    example: '###################'

        "400":
          description: Логин или пароль неверные

        "404":
          description: Пользователь не найден, либо неверный email

    get:
      tags:
        - users
      parameters:
      - name: userToken
        in: header
        required: true
        description: Токен
        schema:
          type: string 

      summary: Получение информации об авторизации пользователя
      description: Получит данные пользователя на основе токена

      responses:
        "200": 
          description: Объект пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "403":
          description: Доступ запрещен

components:
  schemas:
    fullOffer:
      type: object

      properties:
        title: 
          type: string
          example: Заголовок предложения

        description:
          type: string
          example: Описание предложения

        createdDate:
          type: string
          example: '2023-09-22T16:17:26.404Z'

        city: 
          type: string
          example: 'Один из 6 городов'

        previewImage:
          type: string
          example: 'studio.jpg'

        images: 
          type: array
          example: ['studio.jpg', 'studio-1.jpg']

        isPremium: 
          type: boolean
          example: false

        isFavourites: 
          type: boolean
          example: false

        rating: 
          type: number
          example: 0

        housingType: 
          type: string
          example: 'studio'

        rooms: 
          type: number
          example: 1
        
        guestsNumber: 
          type: number
          example: 1

        price: 
          type: number
          example: 100

        comfort: 
          type: array
          example: ['Fridge', 'Towels']

        userType: 
          type: string
          example: User

        comments: 
          type: number
          example: 0
        
        userId:
          type: string
          example: '6524578b3e67fd0291b6996f'

        coordinates:
          type: object
          $ref: '#/components/schemas/coordinates'

    previewOffer:
      type: object

      properties:
        price: 
          type: number
          example: 100
        
        title: 
          type: string
          example: Заголовок предложения

        housingType: 
          type: string
          example: 'studio'

        isFavourites: 
          type: boolean
          example: false

        createdDate:
          type: string
          example: '2023-09-22T16:17:26.404Z'

        city: 
          type: string
          example: 'Один из 6 городов'

        previewImage:
          type: string
          example: 'studio.jpg'

        isPremium: 
          type: boolean
          example: false
        
        rating: 
          type: number
          example: 0

        comments: 
          type: number
          example: 0

    comment:
      type: object

      properties:
        text: 
          type: string
          example: Текст комментария

        rating:
          type: number
          example: 1

        authorId:
          type: string
          example: 6524578b3e67fd0291b6996f

        createdDate:
          type: string
          example: 2023-09-22T16:17:26.404Z

    coordinates:
      type: object
      properties:
            lat:
              type: string
              example: '48.85661'
            long:
              type: string
              example: '2.351499'

    user:
      type: object

      properties:
        email:
          type: string
          example: test@mail.ru
        
        name:
          type: string
          example: John Doe

        avatar:
          type: string
          example: awesome-avatar.jpg

        userType:
          type: string
          example: User

        id: 
          type: string
          example: 6524578b3e67fd0291b6996f